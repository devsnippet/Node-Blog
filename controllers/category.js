var config      = require('../config'),    models 	    = require('../models'),    auth 	    = require("../util/authorized_controller"),    IdGenerator = models.IdGenerator,    Category 	= models.Category;module.exports = {		mapping: {		"index" : {			"url":"/category",			"method":"get",			"description":"post list",			"auth":true		},		"new" : {			"url":"/category/add",			"method":"get",			"description":"create a new post",			"auth":true		},		"create" : {			"url":"/category",			"method":"put",			"description":"create a new post",			"auth":true		},		"edit" : {			"url":"/category/edit/:id",			"method":"get",			"description":"create a new post",			"auth":true		},		"update" : {			"url":"/category/save",			"method":"put",			"description":"create a new post",			"auth":true		}	}, 		// GET /index	index : function(req, res) {		auth.handle_admin_request(req, res, function(req, res, user){			Category.find({}, function(error, category){				if(!error) {					res.render('category/index', {                        title       : 'my post' ,                        category    : category,                        message     : {                            error   : req.flash('error'),                            success : req.flash('success')                        }                    });				} else {					res.send("fail", 500);				}			});		});	},	// GET /category-add	new : function(req, res) {		auth.handle_admin_request(req, res, function(req, res, user){			res.render('category/create', {                title: 'create category'            });		});	}, 	// PUT /posts	create : function(req, res) {		auth.handle_admin_request(req, res, function(req, res, user){			IdGenerator.findOne({modelname : 'Category'},function(err,doc){				if(doc){				    doc.currentid += 1;				}else{				    doc = new IdGenerator();				    doc.modelname = 'Category';				}				var category = new Category();				category.id 	= doc.currentid;				category.name   = req.body.category["name"].toString();                category.type   = parseInt(req.body.category["type"]);				category.save(function(err){					if(!err) {						doc.save(function(err){						    if(err) req.flash('error', '添加分类成功，但ID更新失败');						});                        req.flash('success', '添加分类成功');					}else{                        req.flash('error', '添加分类失败');						//res.send(err.message, 403);					}                    res.redirect('/category'+config.app_ext);				});			});		});	},	// GET /category-edit-:id	edit: function(req, res) {		var id = parseInt(req.params.id);		auth.handle_admin_request(req, res, function(req, res, user){			Category.findOne({id : id}, function(error, category){				if(!error) {					res.render('category/edit', {                        title       : 'category edit',                        category    : category                    });				} else {					res.send("fail", 500);				}			});		});	},	// PUT /category-save	update: function(req, res) {		auth.handle_admin_request(req, res, function(req, res, user){			Category.findOne({id : req.body.category.id}, function(error, category){				if(error) {					req.flash('error', '数据读取失败');				} else {					category.name 	= req.body.category.name.toString();                    category.type 	= parseInt(req.body.category.type);					category.save(function(error){						if(error) {							req.flash('error', '修改分类失败');						} else {							req.flash('success', '修改分类成功');						}                        res.redirect('/category'+config.app_ext);					});				}			});		});	}}